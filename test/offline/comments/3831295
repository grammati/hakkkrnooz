<html><head><link rel="stylesheet" type="text/css" href="http://ycombinator.com/news.css">
<link rel="shortcut icon" href="http://ycombinator.com/favicon.ico">
<script>
function byId(id) {
  return document.getElementById(id);
}

function vote(node) {
  var v = node.id.split(/_/);   // {'up', '123'}
  var item = v[1]; 

  // hide arrows
  byId('up_'   + item).style.visibility = 'hidden';
  byId('down_' + item).style.visibility = 'hidden';

  // ping server
  var ping = new Image();
  ping.src = node.href;

  return false; // cancel browser nav
} </script><title>Automatic Redis Failover for Ruby | Hacker News</title></head><body><center><table border=0 cellpadding=0 cellspacing=0 width="85%" bgcolor=#f6f6ef><tr><td bgcolor=#ff6600><table border=0 cellpadding=0 cellspacing=0 width="100%" style="padding:2px"><tr><td style="width:18px;padding-right:4px"><a href="http://ycombinator.com"><img src="http://ycombinator.com/images/y18.gif" width=18 height=18 style="border:1px #ffffff solid;"></img></a></td><td style="line-height:12pt; height:10px;"><span class="pagetop"><b><a href="news">Hacker News</a></b><img src="http://ycombinator.com/images/s.gif" height=1 width=10><a href="newest">new</a> | <a href="newcomments">comments</a> | <a href="ask">ask</a> | <a href="jobs">jobs</a> | <a href="submit">submit</a></span></td><td style="text-align:right;padding-right:4px;"><span class="pagetop"><a href="newslogin?whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35">login</a></span></td></tr></table></td></tr><tr style="height:10px"></tr><tr><td><table border=0><tr><td><center><a id=up_3831295 href="vote?for=3831295&dir=up&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35"><img src="http://ycombinator.com/images/grayarrow.gif" border=0 vspace=3 hspace=2></a><span id=down_3831295></span></center></td><td class="title"><a href="https://github.com/ryanlecompte/redis_failover">Automatic Redis Failover for Ruby</a><span class="comhead"> (github.com) </span></td></tr><tr><td colspan=1></td><td class="subtext"><span id=score_3831295>19 points</span> by <a href="user?id=ryanlecompte">ryanlecompte</a> 3 hours ago  | <a href="item?id=3831295">7 comments</a></td></tr><tr style="height:10px"></tr><tr><td></td><td><form method=post action="/r"><input type=hidden name="fnid" value="P94nryC8bR"><textarea name="text" rows=6 cols=60></textarea><br><br>
<input type=submit value="add comment"></form></td></tr></table><br><br>
<table border=0><tr><td><table border=0><tr><td><img src="http://ycombinator.com/images/s.gif" height=1 width=0></td><td valign=top><center><a id=up_3831510 href="vote?for=3831510&dir=up&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35"><img src="http://ycombinator.com/images/grayarrow.gif" border=0 vspace=3 hspace=2></a><span id=down_3831510></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=antirez">antirez</a> 2 hours ago  | <a href="item?id=3831510">link</a></span></div><br>
<span class="comment"><font color=#000000>In case you wonder, after Redis 2.6 RC1 this is my #1 commitment, to provide a standard Redis failover tool.
Note that Redis Cluster that will be also be one of the big focus after 2.6 is not the real fix for this: many users just have two instances, one master and a slave for failover, or multiple instances that are coupled this way and are conceptually single servers. Often they don't actually need Redis Cluster, or even <i>can not use</i> Redis Cluster (because does not implement the full Redis API, but a subset). So what happens? All this users have to invent an HA system for Redis again and again.<p>It's still a work in progress but the idea is that the standard Redis failover will be based on a stand-alone daemon that is called redis-sentinel that you can place at different positions in your network. It talks with other redis-sentinels, and if there are the right condition the failover is performed. So there is no proxy or alike, nor the server itself will be touched.</font></span><p><font size=1><u><a href="reply?id=3831510&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35">reply</a></u></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="http://ycombinator.com/images/s.gif" height=1 width=0></td><td valign=top><center><a id=up_3831575 href="vote?for=3831575&dir=up&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35"><img src="http://ycombinator.com/images/grayarrow.gif" border=0 vspace=3 hspace=2></a><span id=down_3831575></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=cheald">cheald</a> 1 hour ago  | <a href="item?id=3831575">link</a></span></div><br>
<span class="comment"><font color=#000000>Awesome. I was implementing my own version of this with doozer and eventmachine, but I might just use this one instead!</font></span><p><font size=1><u><a href="reply?id=3831575&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35">reply</a></u></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="http://ycombinator.com/images/s.gif" height=1 width=0></td><td valign=top><center><a id=up_3831381 href="vote?for=3831381&dir=up&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35"><img src="http://ycombinator.com/images/grayarrow.gif" border=0 vspace=3 hspace=2></a><span id=down_3831381></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=DanWaterworth">DanWaterworth</a> 3 hours ago  | <a href="item?id=3831381">link</a></span></div><br>
<span class="comment"><font color=#000000>What happens in the case of a network partition?</font></span><p><font size=1><u><a href="reply?id=3831381&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35">reply</a></u></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="http://ycombinator.com/images/s.gif" height=1 width=40></td><td valign=top><center><a id=up_3831517 href="vote?for=3831517&dir=up&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35"><img src="http://ycombinator.com/images/grayarrow.gif" border=0 vspace=3 hspace=2></a><span id=down_3831517></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=antirez">antirez</a> 2 hours ago  | <a href="item?id=3831517">link</a></span></div><br>
<span class="comment"><font color=#000000>Can't reply for the solution posted in this article, but well, I think this is one of the main design concerns. For redis-sentinel (I described it in another comment in this thread) the trick is that you place the sentinels where you want and select a minimum number of agreement for failover, so what happens depends on where you place the sentinels and the min agreement you configure. It's easy to have the desired behavior this way.</font></span><p><font size=1><u><a href="reply?id=3831517&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35">reply</a></u></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="http://ycombinator.com/images/s.gif" height=1 width=80></td><td valign=top><center><a id=up_3831680 href="vote?for=3831680&dir=up&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35"><img src="http://ycombinator.com/images/grayarrow.gif" border=0 vspace=3 hspace=2></a><span id=down_3831680></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=salimane">salimane</a> 59 minutes ago  | <a href="item?id=3831680">link</a></span></div><br>
<span class="comment"><font color=#000000>something to keep in kind is that sometimes, the redis server can't accept connections anymore because of limits etc...but the server is still serving old connections. so in that case, i think you don't want to just failover... the tricky part is to know if the server is really down</font></span><p><font size=1><u><a href="reply?id=3831680&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35">reply</a></u></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="http://ycombinator.com/images/s.gif" height=1 width=120></td><td valign=top><center><a id=up_3831712 href="vote?for=3831712&dir=up&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35"><img src="http://ycombinator.com/images/grayarrow.gif" border=0 vspace=3 hspace=2></a><span id=down_3831712></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=antirez">antirez</a> 44 minutes ago  | <a href="item?id=3831712">link</a></span></div><br>
<span class="comment"><font color=#000000>There is no sane condition in Redis that will make it not replying at all AFAIK, even if you set maxclients to 1 the next clients will have an error returned (and the connection closed ASAP). But yes, it is important to understand what down means. I think one of the safest things to do is "down == unreachable". So if you don't get any reply at all, for the configured amount of time consecutively, the server is down. And of course the other redis-sentinels have to agree for the fail over to start.</font></span><p><font size=1><u><a href="reply?id=3831712&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35">reply</a></u></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="http://ycombinator.com/images/s.gif" height=1 width=0></td><td valign=top><center><a id=up_3831324 href="vote?for=3831324&dir=up&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35"><img src="http://ycombinator.com/images/grayarrow.gif" border=0 vspace=3 hspace=2></a><span id=down_3831324></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=ryanlecompte">ryanlecompte</a> 3 hours ago  | <a href="item?id=3831324">link</a></span></div><br>
<span class="comment"><font color=#000000>From the README:<p>Redis Failover attempts to provides a full automatic master/slave failover solution for Ruby. Redis does not provide an automatic failover capability when configured for master/slave replication. When the master node dies, a new master must be manually brought online and assigned as the slave's new master. This manual switch-over is not desirable in high traffic sites where Redis is a critical part of the overall architecture. The existing standard Redis client for Ruby also only supports configuration for a single Redis server. When using master/slave replication, it is desirable to have all writes go to the master, and all reads go to one of the N configured slaves.<p>This gem attempts to address both the server and client problems. A redis failover server runs as a background daemon and monitors all of your configured master/slave nodes. When the server starts up, it automatically discovers who is the master and who are the slaves. Watchers are setup for each of the redis nodes. As soon as a node is detected as being offline, it will be moved to an "unreachable" state. If the node that went offline was the master, then one of the slaves will be promoted as the new master. All existing slaves will be automatically reconfigured to point to the new master for replication. All nodes marked as unreachable will be periodically checked to see if they have been brought back online. If so, the newly reachable nodes will be configured as slaves and brought back into the list of live servers. Note that detection of a node going down should be nearly instantaneous, since the mechanism used to keep tabs on a node is via a blocking Redis BLPOP call (no polling). This call fails nearly immediately when the node actually goes offline.<p>This gem provides a RedisFailover::Client wrapper that is master/slave aware. The client is configured with a single host/port pair that points to redis failover server. The client will automatically connect to the server to find out the current state of the world (i.e., who's the current master and who are the current slaves). The client also acts as a load balancer in that it will automatically dispatch Redis read operations to one of N slaves, and Redis write operations to the master. If it fails to communicate with any node, it will go back and ask the server for the current list of available servers, and then optionally retry the operation.</font></span><p><font size=1><u><a href="reply?id=3831324&whence=%69%74%65%6d%3f%69%64%3d%33%38%33%31%32%39%35">reply</a></u></font></td></tr></table></td></tr></table><br><br>
</td></tr><tr><td><img src="http://ycombinator.com/images/s.gif" height=10 width=0><table width="100%" cellspacing=0 cellpadding=1><tr><td bgcolor=#ff6600></td></tr></table><br>
<center><span class="yclinks"><a href="lists">Lists</a> | <a href="rss">RSS</a> | <a href="http://ycombinator.com/bookmarklet.html">Bookmarklet</a> | <a href="http://ycombinator.com/newsguidelines.html">Guidelines</a> | <a href="http://ycombinator.com/newsfaq.html">FAQ</a> | <a href="http://ycombinator.com/newsnews.html">News News</a> | <a href="item?id=363">Feature Requests</a> | <a href="http://ycombinator.com">Y Combinator</a> | <a href="http://ycombinator.com/apply.html">Apply</a> | <a href="http://ycombinator.com/lib.html">Library</a></span><br><br>
<form method=get action="http://www.hnsearch.com/search#request/all">Search: <input type=text name="q" value="" size=17></form><br>
</center></td></tr></table></center></body></html>